[DEFAULT]
{# IP address is the one associated with eth0 #}
{% set my_ip = ansible_eth0["ipv4"]["address"]  %}

# LOGS/STATE
verbose={{ log_verbose }}
debug={{ log_debug }}
# These must be set, otherwise they will default to where the code is
# located, which isn't writeable by the nova user that runs the services
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/var/lock/nova

# ROOT WRAPPER
# /etc/sudoers.d/nova_sudoers gives the nova user sudo access, but only
# for the nova-rootwrap command
rootwrap_config = /etc/nova/rootwrap.conf

# AUTHENTICATION
auth_strategy=keystone
[keystone_authtoken]
auth_host = {{ controller_ip }}
auth_port = 35357
auth_protocol = http
admin_tenant_name = {{ admin_tenant }}
admin_user = nova
admin_password = {{ nova_identity_password }}
signing_dirname = /var/lib/nova/keystone-signing

# SCHEDULER
compute_scheduler_driver=nova.scheduler.filter_scheduler.FilterScheduler

# DATABASE
sql_connection=mysql://nova:{{ nova_db_password }}@{{ controller_ip }}/nova

# COMPUTE
libvirt_type=kvm
compute_driver=libvirt.LibvirtDriver
preallocate_images=performance

# the instance names have changed in grizlly this is used here for backwards compatibility.
# grizzly now used UUIDs
instance_name_template=instance-%08x
instance_path=/var/lib/nova/instances
api_paste_config=/etc/nova/api-paste.ini
allow_resize_to_same_host=True

# this removes unused base images after a certain amount of time
remove_unused_base_images=True

# make sure that after a reboot of the node the instances return
resume_guests_state_on_host_boot=True

# this allows migration between architectures that are mostly compatible
libvirt_cpu_mode=custom
libvirt_cpu_model=kvm64

# RABBITMQ
rabbit_host={{ controller_ip }}
rpc_backend = nova.openstack.common.rpc.impl_kombu

# GLANCE
image_service=nova.image.glance.GlanceImageService
glance_api_servers=glance:9292

# QUANTUM
service_quantum_metadata_proxy = True
libvirt_vif_driver=nova.virt.libvirt.vif.LibvirtHybridOVSBridgeDriver
libvirt_use_virtio_for_bridges=True

# APIS
enabled_apis=osapi_compute,metadata

# NETWORK
network_api_class=nova.network.quantumv2.api.API
security_group_api=quantum
quantum_url=http://{{ controller_ip }}:9696
quantum_auth_strategy=keystone
quantum_admin_tenant_name={{ admin_tenant }}
quantum_admin_username=quantum
quantum_admin_password=quantum
quantum_admin_auth_url=http://{{ controller_ip }}:35357/v2.0

my_ip={{ my_ip }}

# NOVNC CONSOLE
novncproxy_base_url=http://{{ controller_ip }}:6080/vnc_auto.html
vncserver_proxyclient_address={{ my_ip }}
vncserver_listen={{ my_ip }}


